#!/bin/bash 
binaryDependenciesTag=0.0.2bin
origin=selfOrigin
selfOrigin=git@github.com:2048wc/2048wc.git

redisClientSource=git@github.com:fzzy/radix.git
redisRemote=redisClient
redisRef=master


addSelfOrigin="git remote add $origin $selfOrigin"
checkoutSourceDep="git --work-tree=$VIRTUAL_ENV/sourceDependencies/src/github.com/fzzy/radix checkout refs/remotes/$redisRemote/$redisRef -- ."
addRemote="git remote add $redisRemote $redisClientSource"
fetchRemote="git fetch --no-tags $redisRemote $redisRef:refs/remotes/$redisRemote/$redisRef"

if [[ $VIRTUAL_ENV == "" ]] ; then
    echo run \`source activate\` to activate virtualenv first 1>&2
    exit 1
fi

mkdir -p $VIRTUAL_ENV/sourceDependencies/src/github.com/fzzy/radix > /dev/null
$($checkoutSourceDep) 
checkoutSuccessful=$?
if [[ $checkoutSuccessful ]] ; then
git reset HEAD > /dev/null
fi
if [[ $checkoutSuccessful != 0 ]] ; then
    $($addRemote)
    $($fetchRemote)
    $($checkoutSourceDep)
    git reset HEAD > /dev/null
fi

checkoutBinaryDeps="git checkout refs/tags/$binaryDependenciesTag -- ."
$($checkoutBinaryDeps)
checkoutSuccessful=$?
if [[ $checkoutSuccessful == 0 ]] ; then
    git reset HEAD > /dev/null
fi
if [[ $checkoutSuccessful != 0 ]] ; then
    #TODO remove previous selfOrigin, and somewhere else in the code as well
    $($addSelfOrigin)
    git fetch $origin --tags $binaryDependenciesTag
    if [[ $? != 0 ]] ; then
        echo "couldn't fetch from $origin" 1>&2
        exit 1
    fi
    $($checkoutBinaryDeps)
    git reset HEAD > /dev/null
fi
